{
	"name": "AttributeError",
	"message": "'dict' object has no attribute '_member_names'",
	"stack": "---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
c:\\Users\\pho\\repos\\Spike3DWorkEnv\\Spike3D\\ReviewOfWork_2023-12-12.ipynb Cell 86 line 1
     <a href='vscode-notebook-cell:/c%3A/Users/pho/repos/Spike3DWorkEnv/Spike3D/ReviewOfWork_2023-12-12.ipynb#Y150sZmlsZQ%3D%3D?line=11'>12</a> directional_laps_output_path = curr_active_pipeline.get_output_path().joinpath(f'{out_filename_str}DirectionalLaps.pkl').resolve()
     <a href='vscode-notebook-cell:/c%3A/Users/pho/repos/Spike3DWorkEnv/Spike3D/ReviewOfWork_2023-12-12.ipynb#Y150sZmlsZQ%3D%3D?line=12'>13</a> assert directional_laps_output_path.exists()
---> <a href='vscode-notebook-cell:/c%3A/Users/pho/repos/Spike3DWorkEnv/Spike3D/ReviewOfWork_2023-12-12.ipynb#Y150sZmlsZQ%3D%3D?line=13'>14</a> loaded_directional_laps, loaded_rank_order = loadData(directional_laps_output_path)
        directional_laps_output_path = WindowsPath('W:/Data/KDIBA/gor01/one/2006-6-08_14-26-15/output/2023-12-12-minimum_inclusion_fr-1-included_qclu_values-[1, 2, 4, 9]DirectionalLaps.pkl')
     <a href='vscode-notebook-cell:/c%3A/Users/pho/repos/Spike3DWorkEnv/Spike3D/ReviewOfWork_2023-12-12.ipynb#Y150sZmlsZQ%3D%3D?line=14'>15</a> assert (loaded_directional_laps is not None)
     <a href='vscode-notebook-cell:/c%3A/Users/pho/repos/Spike3DWorkEnv/Spike3D/ReviewOfWork_2023-12-12.ipynb#Y150sZmlsZQ%3D%3D?line=15'>16</a> assert (loaded_rank_order is not None)

File ~\\repos\\Spike3DWorkEnv\\pyPhoPlaceCellAnalysis\\src\\pyphoplacecellanalysis\\General\\Pipeline\\Stages\\Loading.py:151, in loadData(pkl_path=WindowsPath('W:/Data/KDIBA/gor01/one/2006-6-08_1...ded_qclu_values-[1, 2, 4, 9]DirectionalLaps.pkl'), debug_print=False, **kwargs={})
    149 with open(pkl_path, 'rb') as dbfile:
    150     try:
--> 151         db = renamed_load(dbfile, move_modules_list=active_move_modules_list, **kwargs)
        db = None
        active_move_modules_list = {'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.SingleBarResult': 'pyphoplacecellanalysis.General.Pipeline.Stages.ComputationFunctions.MultiContextComputationFunctions.LongShortTrackComputations.SingleBarResult', 'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.InstantaneousSpikeRateGroupsComputation': 'pyphoplacecellanalysis.General.Pipeline.Stages.ComputationFunctions.MultiContextComputationFunctions.LongShortTrackComputations.InstantaneousSpikeRateGroupsComputation', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.VideoOutputModeConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.VideoOutputModeConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.PlottingConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.PlottingConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.InteractivePlaceCellConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.InteractivePlaceCellConfig', 'pyphoplacecellanalysis.PhoPositionalData.plotting.mixins.general_plotting_mixins.SingleNeuronPlottingExtended': 'pyphoplacecellanalysis.General.Model.Configs.NeuronPlottingParamConfig.SingleNeuronPlottingExtended'}
        kwargs = {}
        dbfile = <_io.BufferedReader name='W:\\\\Data\\\\KDIBA\\\\gor01\\\\one\\\\2006-6-08_14-26-15\\\\output\\\\2023-12-12-minimum_inclusion_fr-1-included_qclu_values-[1, 2, 4, 9]DirectionalLaps.pkl'>
    153     except NotImplementedError as err:
    154         error_message = str(err)

File ~\\repos\\Spike3DWorkEnv\\pyPhoCoreHelpers\\src\\pyphocorehelpers\\Filesystem\\pickling_helpers.py:67, in renamed_load(file_obj=<_io.BufferedReader name='W:\\\\Data\\\\KDIBA\\\\gor01...ded_qclu_values-[1, 2, 4, 9]DirectionalLaps.pkl'>, move_modules_list={'pyphoplacecellanalysis.General.Configs.DynamicConfigs.InteractivePlaceCellConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.InteractivePlaceCellConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.PlottingConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.PlottingConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.VideoOutputModeConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.VideoOutputModeConfig', 'pyphoplacecellanalysis.PhoPositionalData.plottin...eral_plotting_mixins.SingleNeuronPlottingExtended': 'pyphoplacecellanalysis.General.Model.Configs.NeuronPlottingParamConfig.SingleNeuronPlottingExtended', 'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.InstantaneousSpikeRateGroupsComputation': 'pyphoplacecellanalysis.General.Pipeline.Stages.C...putations.InstantaneousSpikeRateGroupsComputation', 'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.SingleBarResult': 'pyphoplacecellanalysis.General.Pipeline.Stages.C...ctions.LongShortTrackComputations.SingleBarResult'}, **kwargs={})
     65 def renamed_load(file_obj, move_modules_list:Dict=None, **kwargs):
     66     \"\"\" from pyphocorehelpers.Filesystem.pickling_helpers import renamed_load \"\"\"
---> 67     return RenameUnpickler(file_obj, move_modules_list=move_modules_list, **kwargs).load()
        file_obj = <_io.BufferedReader name='W:\\\\Data\\\\KDIBA\\\\gor01\\\\one\\\\2006-6-08_14-26-15\\\\output\\\\2023-12-12-minimum_inclusion_fr-1-included_qclu_values-[1, 2, 4, 9]DirectionalLaps.pkl'>
        move_modules_list = {'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.SingleBarResult': 'pyphoplacecellanalysis.General.Pipeline.Stages.ComputationFunctions.MultiContextComputationFunctions.LongShortTrackComputations.SingleBarResult', 'pyphoplacecellanalysis.SpecificResults.PhoDiba2023Paper.InstantaneousSpikeRateGroupsComputation': 'pyphoplacecellanalysis.General.Pipeline.Stages.ComputationFunctions.MultiContextComputationFunctions.LongShortTrackComputations.InstantaneousSpikeRateGroupsComputation', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.VideoOutputModeConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.VideoOutputModeConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.PlottingConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.PlottingConfig', 'pyphoplacecellanalysis.General.Configs.DynamicConfigs.InteractivePlaceCellConfig': 'pyphoplacecellanalysis.General.Model.Configs.DynamicConfigs.InteractivePlaceCellConfig', 'pyphoplacecellanalysis.PhoPositionalData.plotting.mixins.general_plotting_mixins.SingleNeuronPlottingExtended': 'pyphoplacecellanalysis.General.Model.Configs.NeuronPlottingParamConfig.SingleNeuronPlottingExtended'}
        kwargs = {}

File k:\\FastSwap\\Environments\\pypoetry\\pypoetry\\Cache\\virtualenvs\\spike3d-UP7QTzFM-py3.9\\lib\\site-packages\\dill\\_dill.py:646, in Unpickler.load(self=<pyphocorehelpers.Filesystem.pickling_helpers.RenameUnpickler object>)
    645 def load(self): #NOTE: if settings change, need to update attributes
--> 646     obj = StockUnpickler.load(self)
        self = <pyphocorehelpers.Filesystem.pickling_helpers.RenameUnpickler object at 0x000002C471658040>
        StockUnpickler = <class '_pickle.Unpickler'>
    647     if type(obj).__module__ == getattr(_main_module, '__name__', '__main__'):
    648         if not self._ignore:
    649             # point obj class to main

File k:\\FastSwap\\Environments\\pypoetry\\pypoetry\\Cache\\virtualenvs\\spike3d-UP7QTzFM-py3.9\\lib\\site-packages\\dill\\_dill.py:757, in _create_type(typeobj=<class 'enum.EnumMeta'>, *args=('PlotStringBrevityModeEnum', (<enum 'Enum'>,), {'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>, 'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, '__doc__': 'An enum of different modes that specify how verb...s important elements may be omitted entirely\
    ', '__module__': 'neuropy.core.neuron_identities', '__new__': <function Enum.__new__>, '_basic_identity_formatting_string': <function PlotStringBrevityModeEnum._basic_identity_formatting_string>, '_extra_info_identity_formatting_string': <function PlotStringBrevityModeEnum._extra_info_identity_formatting_string>, ...}))
    756 def _create_type(typeobj, *args):
--> 757     return typeobj(*args)
        typeobj = <class 'enum.EnumMeta'>
        args = ('PlotStringBrevityModeEnum', (<enum 'Enum'>,), {'_generate_next_value_': <function Enum._generate_next_value_ at 0x000002C45A76E550>, '__module__': 'neuropy.core.neuron_identities', '__doc__': 'An enum of different modes that specify how verbose/brief the rendered strings should be on a given plot.\
    More verbose means longer ouptuts with fewer abbreviations. For very brief modes, less important elements may be omitted entirely\
    ', 'extended_identity_labels': <property object at 0x000002C47288DEA0>, '_basic_identity_formatting_string': <function PlotStringBrevityModeEnum._basic_identity_formatting_string at 0x000002C45A76EDC0>, '_extra_info_identity_formatting_string': <function PlotStringBrevityModeEnum._extra_info_identity_formatting_string at 0x000002C45A76E0D0>, 'extended_identity_formatting_string': <function PlotStringBrevityModeEnum.extended_identity_formatting_string at 0x000002C45A76E9D0>, 'should_show_firing_rate_label': <property object at 0x000002C47288D1D0>, '_member_names_': ['VERBOSE', 'DEFAULT', 'CONCISE', 'MINIMAL', 'NONE'], '_member_map_': {'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>}, '_member_type_': <class 'object'>, '_value2member_map_': {'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>}, 'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>, '__new__': <function Enum.__new__ at 0x000002C45A76E790>})

File ~\\.pyenv\\pyenv-win\\versions\\3.9.13\\lib\\enum.py:197, in EnumMeta.__new__(metacls=<class 'enum.EnumMeta'>, cls='PlotStringBrevityModeEnum', bases=(<enum 'Enum'>,), classdict={'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>, 'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, '__doc__': 'An enum of different modes that specify how verb...s important elements may be omitted entirely\
    ', '__module__': 'neuropy.core.neuron_identities', '__new__': <function Enum.__new__>, '_basic_identity_formatting_string': <function PlotStringBrevityModeEnum._basic_identity_formatting_string>, '_extra_info_identity_formatting_string': <function PlotStringBrevityModeEnum._extra_info_identity_formatting_string>, ...}, **kwds={})
    191 __new__, save_new, use_args = metacls._find_new_(
    192         classdict, member_type, first_enum,
    193         )
    195 # save enum items into separate mapping so they don't get baked into
    196 # the new class
--> 197 enum_members = {k: classdict[k] for k in classdict._member_names}
        classdict = {'_generate_next_value_': <function Enum._generate_next_value_ at 0x000002C45A76E550>, '__module__': 'neuropy.core.neuron_identities', '__doc__': 'An enum of different modes that specify how verbose/brief the rendered strings should be on a given plot.\
    More verbose means longer ouptuts with fewer abbreviations. For very brief modes, less important elements may be omitted entirely\
    ', 'extended_identity_labels': <property object at 0x000002C47288DEA0>, '_basic_identity_formatting_string': <function PlotStringBrevityModeEnum._basic_identity_formatting_string at 0x000002C45A76EDC0>, '_extra_info_identity_formatting_string': <function PlotStringBrevityModeEnum._extra_info_identity_formatting_string at 0x000002C45A76E0D0>, 'extended_identity_formatting_string': <function PlotStringBrevityModeEnum.extended_identity_formatting_string at 0x000002C45A76E9D0>, 'should_show_firing_rate_label': <property object at 0x000002C47288D1D0>, '_member_names_': ['VERBOSE', 'DEFAULT', 'CONCISE', 'MINIMAL', 'NONE'], '_member_map_': {'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>}, '_member_type_': <class 'object'>, '_value2member_map_': {'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>}, 'VERBOSE': <PlotStringBrevityModeEnum.VERBOSE: 'VERBOSE'>, 'DEFAULT': <PlotStringBrevityModeEnum.DEFAULT: 'DEFAULT'>, 'CONCISE': <PlotStringBrevityModeEnum.CONCISE: 'CONCISE'>, 'MINIMAL': <PlotStringBrevityModeEnum.MINIMAL: 'MINIMAL'>, 'NONE': <PlotStringBrevityModeEnum.NONE: 'NONE'>, '__new__': <function Enum.__new__ at 0x000002C45A76E790>}
    198 for name in classdict._member_names:
    199     del classdict[name]

AttributeError: 'dict' object has no attribute '_member_names'"
}